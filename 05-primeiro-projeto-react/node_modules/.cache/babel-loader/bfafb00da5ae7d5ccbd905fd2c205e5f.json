{"ast":null,"code":"var _jsxFileName = \"/home/luan/source/gostack/aulas/05-primeiro-projeto-react/src/pages/Repository/index.tsx\";\nimport React, { useEffect } from 'react';\nimport { useRouteMatch, Link } from 'react-router-dom';\nimport { FiChevronLeft, FiChevronRight } from 'react-icons/fi';\nimport api from '../../services/api';\nimport logoImg from \"../../assets/logo.svg\";\nimport { Header, RepositoryInfo, Issues } from './styles';\n\nconst Repository = () => {\n  const [repository, setRepository] = useState(null);\n  const [issues, setIssues] = useState([]);\n  const {\n    params\n  } = useRouteMatch();\n  useEffect(() => {\n    // FIRST METHOD\n    api.get(`repos/${params.repository}`).then(response => {\n      console.log(response.data);\n    });\n    api.get(`repos/${params.repository}/issues`).then(response => {\n      console.log(response.data);\n    }); // SECOND METHOD\n    // async function loadData(): Promise<void> {\n    //   const repository = await api.get(`repos/${params.repository}`);\n    //   const issues = await api.get(`repos/${params.repository}/issues`);\n    //   console.log(repository);\n    //   console.log(issues);\n    // }\n    // loadData();\n    // THIRD METHOD\n    // async function loadData(): Promise<void> {\n    //   const [repository, issues] = await Promise.all([ //Promise.race (a que ganhar entra)\n    //     api.get(`repos/${params.repository}`),\n    //     api.get(`repos/${params.repository}/issues`),\n    //   ]);\n    //   console.log(repository);\n    //   console.log(issues);\n    // }\n    // loadData();\n  }, [params.repository]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: logoImg,\n    alt: \"GithubExplorer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FiChevronLeft, {\n    size: 16,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }), \"Voltar\")), /*#__PURE__*/React.createElement(RepositoryInfo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"https://avatars3.githubusercontent.com/u/16545335?s=460&u=18e1e5335dc83dd01a6f803a00b5a05e00d0ad4e&v=4\",\n    alt: \"Rocketseat\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, \"rocketseat/unform\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, \"Descricao do repositorio\"))), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, \"1818\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, \"Stars\")), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, \"48\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, \"Forks\")), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, \"67\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, \"Issues abertas\")))), /*#__PURE__*/React.createElement(Issues, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"sdafa\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }, \"fasdfa\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, \"asdfasd\")), /*#__PURE__*/React.createElement(FiChevronRight, {\n    size: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default Repository;","map":{"version":3,"sources":["/home/luan/source/gostack/aulas/05-primeiro-projeto-react/src/pages/Repository/index.tsx"],"names":["React","useEffect","useRouteMatch","Link","FiChevronLeft","FiChevronRight","api","Header","RepositoryInfo","Issues","Repository","repository","setRepository","useState","issues","setIssues","params","get","then","response","console","log","data","logoImg"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { useRouteMatch, Link } from 'react-router-dom';\nimport { FiChevronLeft, FiChevronRight } from 'react-icons/fi';\nimport api from '../../services/api';\n\nimport logoImg from '../../assets/logo.svg';\n\nimport { Header, RepositoryInfo, Issues } from './styles';\n\ninterface RepositoryParams {\n  repository: string;\n}\n\ninterface Repository {\n  full_name: string;\n  description: string;\n  stargazers_count: number;\n  forks_count: number;\n  open_issues_count: number;\n  owner: {\n    login: string;\n    avatar_url: string;\n  };\n}\n\nconst Repository: React.FC = () => {\n  const [repository, setRepository] = useState<Repository>(null);\n  const [issues, setIssues] = useState([]);\n\n  const { params } = useRouteMatch<RepositoryParams>();\n\n  useEffect(() => {\n    // FIRST METHOD\n    api.get(`repos/${params.repository}`).then(response => {\n      console.log(response.data);\n    });\n\n    api.get(`repos/${params.repository}/issues`).then(response => {\n      console.log(response.data);\n    });\n\n    // SECOND METHOD\n    // async function loadData(): Promise<void> {\n    //   const repository = await api.get(`repos/${params.repository}`);\n    //   const issues = await api.get(`repos/${params.repository}/issues`);\n\n    //   console.log(repository);\n    //   console.log(issues);\n    // }\n\n    // loadData();\n\n    // THIRD METHOD\n    // async function loadData(): Promise<void> {\n    //   const [repository, issues] = await Promise.all([ //Promise.race (a que ganhar entra)\n    //     api.get(`repos/${params.repository}`),\n    //     api.get(`repos/${params.repository}/issues`),\n    //   ]);\n\n    //   console.log(repository);\n    //   console.log(issues);\n    // }\n\n    // loadData();\n  }, [params.repository]);\n\n  return (\n    <>\n      <Header>\n        <img src={logoImg} alt=\"GithubExplorer\" />\n        <Link to=\"/\">\n          <FiChevronLeft size={16} />\n          Voltar\n        </Link>\n      </Header>\n\n      <RepositoryInfo>\n        <header>\n          <img\n            src=\"https://avatars3.githubusercontent.com/u/16545335?s=460&u=18e1e5335dc83dd01a6f803a00b5a05e00d0ad4e&v=4\"\n            alt=\"Rocketseat\"\n          />\n          <div>\n            <strong>rocketseat/unform</strong>\n            <p>Descricao do repositorio</p>\n          </div>\n        </header>\n        <ul>\n          <li>\n            <strong>1818</strong>\n            <span>Stars</span>\n          </li>\n          <li>\n            <strong>48</strong>\n            <span>Forks</span>\n          </li>\n          <li>\n            <strong>67</strong>\n            <span>Issues abertas</span>\n          </li>\n        </ul>\n      </RepositoryInfo>\n\n      <Issues>\n        <Link to=\"sdafa\">\n          <div>\n            <strong>fasdfa</strong>\n            <p>asdfasd</p>\n          </div>\n\n          <FiChevronRight size={20} />\n        </Link>\n      </Issues>\n    </>\n  );\n};\n\nexport default Repository;\n"]},"metadata":{},"sourceType":"module"}